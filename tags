!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/storm/git/exploit_dev/j0lt-ddos-tool/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(TARGET)	Makefile	/^$(TARGET): $(OBJS)$/;"	t
0	.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/**"$/;"	s	array:configurations.0.includePath
0	.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^                "-fdiagnostics-color=always",$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/tasks.json	/^                "-g",$/;"	s	array:tasks.0.args
2	.vscode/tasks.json	/^                "-Wall",$/;"	s	array:tasks.0.args
3	.vscode/tasks.json	/^                "-Wextra",$/;"	s	array:tasks.0.args
4	.vscode/tasks.json	/^                "*.c",$/;"	s	array:tasks.0.args
5	.vscode/tasks.json	/^                "-o",$/;"	s	array:tasks.0.args
6	.vscode/tasks.json	/^                "${fileDirname}\/${fileBasenameNoExtension}"$/;"	s	array:tasks.0.args
Author	README.md	/^## Author$/;"	s	chapter:j0lt.c DNS Amplification Tool
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -Wextra$/;"	m
CHECK_SUCCESS	j0lt.c	/^#define CHECK_SUCCESS(/;"	d	file:
DEFINE_INSERT_FN	j0lt.c	/^#define DEFINE_INSERT_FN(/;"	d	file:
DNS_AA_J0LT	j0lt.c	/^#define DNS_AA_J0LT /;"	d	file:
DNS_AD_J0LT	j0lt.c	/^#define DNS_AD_J0LT /;"	d	file:
DNS_ANCOUNT_J0LT	j0lt.c	/^#define DNS_ANCOUNT_J0LT /;"	d	file:
DNS_ARCOUNT_J0LT	j0lt.c	/^#define DNS_ARCOUNT_J0LT /;"	d	file:
DNS_CD_J0LT	j0lt.c	/^#define DNS_CD_J0LT /;"	d	file:
DNS_ID_J0LT	j0lt.c	/^#define DNS_ID_J0LT /;"	d	file:
DNS_NSCOUNT_J0LT	j0lt.c	/^#define DNS_NSCOUNT_J0LT /;"	d	file:
DNS_OPCODE_J0LT	j0lt.c	/^#define DNS_OPCODE_J0LT /;"	d	file:
DNS_QDCOUNT_J0LT	j0lt.c	/^#define DNS_QDCOUNT_J0LT /;"	d	file:
DNS_QR_J0LT	j0lt.c	/^#define DNS_QR_J0LT /;"	d	file:
DNS_RA_J0LT	j0lt.c	/^#define DNS_RA_J0LT /;"	d	file:
DNS_RCODE_J0LT	j0lt.c	/^#define DNS_RCODE_J0LT /;"	d	file:
DNS_RD_J0LT	j0lt.c	/^#define DNS_RD_J0LT /;"	d	file:
DNS_TC_J0LT	j0lt.c	/^#define DNS_TC_J0LT /;"	d	file:
DNS_Z_J0LT	j0lt.c	/^#define DNS_Z_J0LT /;"	d	file:
IO_H	io.h	/^#define IO_H$/;"	d
IP_DF_J0LT	j0lt.c	/^#define IP_DF_J0LT /;"	d	file:
IP_ID_J0LT	j0lt.c	/^#define IP_ID_J0LT /;"	d	file:
IP_IHL_MAX_J0LT	j0lt.c	/^#define IP_IHL_MAX_J0LT /;"	d	file:
IP_IHL_MIN_J0LT	j0lt.c	/^#define IP_IHL_MIN_J0LT /;"	d	file:
IP_MF_J0LT	j0lt.c	/^#define IP_MF_J0LT /;"	d	file:
IP_OF_J0LT	j0lt.c	/^#define IP_OF_J0LT /;"	d	file:
IP_RF_J0LT	j0lt.c	/^#define IP_RF_J0LT /;"	d	file:
IP_TTL_J0LT	j0lt.c	/^#define IP_TTL_J0LT /;"	d	file:
IP_VER_J0LT	j0lt.c	/^#define IP_VER_J0LT /;"	d	file:
JoltOptions	j0lt.c	/^typedef struct JoltOptions {$/;"	s	file:
JoltOptions	j0lt.c	/^} JoltOptions;$/;"	t	typeref:struct:JoltOptions	file:
Key Features:	README.md	/^## Key Features:$/;"	s	chapter:j0lt.c DNS Amplification Tool
MAX_LINE_SZ_J0LT	j0lt.c	/^#define MAX_LINE_SZ_J0LT /;"	d	file:
OBJS	Makefile	/^OBJS=j0lt.o io.o$/;"	m
Options	README.md	/^ ## Options$/;"	s	chapter:j0lt.c DNS Amplification Tool
Overview	README.md	/^## Overview$/;"	s	chapter:j0lt.c DNS Amplification Tool
PEWPEW_J0LT	j0lt.c	/^#define PEWPEW_J0LT /;"	d	file:
PROCESS_CONTROL_H	process_control.h	/^#define PROCESS_CONTROL_H$/;"	d
PSEUDOHDR	j0lt.c	/^} PSEUDOHDR;$/;"	t	typeref:struct:__anon02c39c500108	file:
RESULT_FAIL_ARG	result.h	/^    RESULT_FAIL_ARG,    \/\/ Invalid arguments provided$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_INIT	result.h	/^    RESULT_FAIL_INIT,   \/\/ Initialization failure$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_IO	result.h	/^    RESULT_FAIL_IO,     \/\/ Input\/output failure$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_MEM	result.h	/^    RESULT_FAIL_MEM,    \/\/ Memory allocation failure$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_NET	result.h	/^    RESULT_FAIL_NET,    \/\/ Network related failure$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_PERM	result.h	/^    RESULT_FAIL_PERM,   \/\/ Permissions or access failure$/;"	e	enum:__anon2481ae5a0103
RESULT_FAIL_UNKNOWN	result.h	/^    RESULT_FAIL_UNKNOWN \/\/ Unknown or unspecified error$/;"	e	enum:__anon2481ae5a0103
RESULT_H	result.h	/^#define RESULT_H$/;"	d
RESULT_SUCCESS	result.h	/^    RESULT_SUCCESS,     \/\/ Indicates successful operation$/;"	e	enum:__anon2481ae5a0103
Resources	README.md	/^## Resources$/;"	s	chapter:j0lt.c DNS Amplification Tool
Result_T	result.h	/^} Result_T;$/;"	t	typeref:enum:__anon2481ae5a0103
TARGET	Makefile	/^TARGET=j0lt$/;"	m
Understanding DNS Amplification Attacks	README.md	/^## Understanding DNS Amplification Attacks$/;"	s	chapter:j0lt.c DNS Amplification Tool
Usage	README.md	/^## Usage$/;"	s	chapter:j0lt.c DNS Amplification Tool
Usage Warning	README.md	/^## Usage Warning$/;"	s	chapter:j0lt.c DNS Amplification Tool
__anon02c39c500108	j0lt.c	/^typedef struct __attribute__((packed, aligned(1))) {$/;"	s	file:
__anon2481ae5a0103	result.h	/^{$/;"	g
all	Makefile	/^all: $(TARGET)$/;"	t
args	.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
cStandard	.vscode/c_cpp_properties.json	/^            "cStandard": "c17",$/;"	s	object:configurations.0
clean	Makefile	/^clean:$/;"	t
command	.vscode/tasks.json	/^            "command": "\/usr\/bin\/gcc",$/;"	s	object:tasks.0
compilerPath	.vscode/c_cpp_properties.json	/^            "compilerPath": "\/usr\/bin\/clang",$/;"	s	object:configurations.0
configurationProvider	.vscode/c_cpp_properties.json	/^            "configurationProvider": "ms-vscode.makefile-tools"$/;"	s	object:configurations.0
configurations	.vscode/c_cpp_properties.json	/^    "configurations": [$/;"	a
cppStandard	.vscode/c_cpp_properties.json	/^            "cppStandard": "c++17",$/;"	s	object:configurations.0
cwd	.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
debug_mode	j0lt.c	/^  bool debug_mode;             \/\/ Debug mode flag$/;"	m	struct:JoltOptions	typeref:typename:bool	file:
defines	.vscode/c_cpp_properties.json	/^            "defines": [],$/;"	a	object:configurations.0
destaddr	j0lt.c	/^  uint32_t destaddr;$/;"	m	struct:__anon02c39c500108	typeref:typename:uint32_t	file:
destroy_spawnattr	process_control.c	/^Result_T destroy_spawnattr(posix_spawnattr_t *attr) {$/;"	f	typeref:typename:Result_T
detail	.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
do_wget_resolv_list	j0lt.c	/^Result_T do_wget_resolv_list() {$/;"	f	typeref:typename:Result_T
err_exit	j0lt.c	/^#define err_exit(/;"	d	file:
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
forge_j0lt_packet	j0lt.c	/^size_t forge_j0lt_packet(char *payload, uint32_t resolvip, uint32_t spoofip,$/;"	f	typeref:typename:size_t
g_args	j0lt.c	/^const char *g_args = "xdt:p:m:r:";$/;"	v	typeref:typename:const char *
g_menu	j0lt.c	/^const char *g_menu = {$/;"	v	typeref:typename:const char *
g_path	j0lt.c	/^const char *g_path = ".\/j0lt-resolv.txt";$/;"	v	typeref:typename:const char *
get_opt_port	j0lt.c	/^Result_T get_opt_port(JoltOptions *opts, const char *optarg) {$/;"	f	typeref:typename:Result_T
get_opt_target	j0lt.c	/^Result_T get_opt_target(JoltOptions *opts, const char *optarg) {$/;"	f	typeref:typename:Result_T
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
hex_mode	j0lt.c	/^  bool hex_mode;               \/\/ Hex dump mode flag$/;"	m	struct:JoltOptions	typeref:typename:bool	file:
includePath	.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.0
init_opts	j0lt.c	/^void init_opts(JoltOptions *opts) {$/;"	f	typeref:typename:void
init_spawnattr	process_control.c	/^Result_T init_spawnattr(posix_spawnattr_t *attr) {$/;"	f	typeref:typename:Result_T
insert_data	io.c	/^insert_data (void **dst, size_t *dst_buflen, const void *src, size_t src_len)$/;"	f	typeref:typename:bool
insert_dns_header	j0lt.c	/^bool insert_dns_header(uint8_t **buf, size_t *buflen) {$/;"	f	typeref:typename:bool
insert_dns_question	j0lt.c	/^bool insert_dns_question(void **buf, size_t *buflen, const char *domain,$/;"	f	typeref:typename:bool
insert_ip_header	j0lt.c	/^bool insert_ip_header(uint8_t **buf, size_t *buflen, PSEUDOHDR *pheader,$/;"	f	typeref:typename:bool
insert_udp_header	j0lt.c	/^bool insert_udp_header(uint8_t **buf, size_t *buflen, PSEUDOHDR *phdr,$/;"	f	typeref:typename:bool
intelliSenseMode	.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "linux-clang-x64",$/;"	s	object:configurations.0
io.o	Makefile	/^io.o: io.c io.h$/;"	t
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
j0lt.c DNS Amplification Tool	README.md	/^# j0lt.c DNS Amplification Tool$/;"	c
j0lt.o	Makefile	/^j0lt.o: j0lt.c io.h$/;"	t
j0lt_checksum	j0lt.c	/^uint16_t j0lt_checksum(const uint16_t *addr, size_t count) {$/;"	f	typeref:typename:uint16_t
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
label	.vscode/tasks.json	/^            "label": "C\/C++: gcc build active file",$/;"	s	object:tasks.0
main	j0lt.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
name	.vscode/c_cpp_properties.json	/^            "name": "Linux",$/;"	s	object:configurations.0
nthreads	j0lt.c	/^  uint16_t nthreads;    \/\/ nthreads of the attack$/;"	m	struct:JoltOptions	typeref:typename:uint16_t	file:
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
parse_opts	j0lt.c	/^Result_T parse_opts(JoltOptions *opts, int argc, const char **argv) {$/;"	f	typeref:typename:Result_T
pathptr	j0lt.c	/^  const char *pathptr;$/;"	m	struct:JoltOptions	typeref:typename:const char *	file:
print_hex	io.c	/^print_hex (void *data, size_t len)$/;"	f	typeref:typename:void
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
process_control.h	.vscode/settings.json	/^        "process_control.h": "c",$/;"	s	object:files.associations
protocol	j0lt.c	/^  uint32_t protocol : 8;$/;"	m	struct:__anon02c39c500108	typeref:typename:uint32_t:8	file:
read_file_into_mem	io.c	/^read_file_into_mem (const char *filename, void **data_out, size_t *size_out)$/;"	f	typeref:typename:bool
readline	io.c	/^readline (char *src, char *dest, size_t srclim, size_t destlim)$/;"	f	typeref:typename:size_t
resolv_path	j0lt.c	/^  char resolv_path[PATH_MAX];  \/\/ Path to the resolver list$/;"	m	struct:JoltOptions	typeref:typename:char[]	file:
send_payload	j0lt.c	/^bool send_payload(const uint8_t *datagram, uint32_t daddr, uint16_t uh_dport,$/;"	f	typeref:typename:bool
sourceaddr	j0lt.c	/^  uint32_t sourceaddr;$/;"	m	struct:__anon02c39c500108	typeref:typename:uint32_t	file:
spawn_process	process_control.c	/^Result_T spawn_process(const char *path,$/;"	f	typeref:typename:Result_T
spoof_ip	j0lt.c	/^  uint32_t spoof_ip;    \/\/ IP to spoof$/;"	m	struct:JoltOptions	typeref:typename:uint32_t	file:
spoof_port	j0lt.c	/^  uint16_t spoof_port;  \/\/ Port to spoof$/;"	m	struct:JoltOptions	typeref:typename:uint16_t	file:
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
type	.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
types.h	.vscode/settings.json	/^        "types.h": "c"$/;"	s	object:files.associations
udplen	j0lt.c	/^  uint32_t udplen : 16;$/;"	m	struct:__anon02c39c500108	typeref:typename:uint32_t:16	file:
version	.vscode/c_cpp_properties.json	/^    "version": 4$/;"	n
version	.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
wait.h	.vscode/settings.json	/^        "wait.h": "c",$/;"	s	object:files.associations
waitstatus.h	.vscode/settings.json	/^        "waitstatus.h": "c",$/;"	s	object:files.associations
zero	j0lt.c	/^  uint32_t zero : 8;$/;"	m	struct:__anon02c39c500108	typeref:typename:uint32_t:8	file:
